{"version":3,"sources":["components/Navbar/Navbar.tsx","api/api.ts","redux/leaguesReducer.ts","assets/leagueLogo.png","components/Leagues/LeagueCard/LeagueCard.tsx","common/Preloader.tsx","components/Leagues/Leagues.tsx","components/Leagues/LeaguesContainer.tsx","redux/teamsReducer.ts","components/Teams/TeamCard/TeamCard.tsx","components/Teams/Teams.tsx","components/Teams/TeamsContainer.tsx","redux/leagueCalendarReducer.ts","components/CalendarLeague/LeaguePaper/LeaguePaper.tsx","common/common.ts","components/CalendarLeague/LeagueCalendar.tsx","components/CalendarLeague/LeagueCalendarContainer.tsx","redux/teamCalendarReducer.ts","components/CalendarTeam/TeamPaper/teamPaper.tsx","components/CalendarTeam/TeamCalendar.tsx","components/CalendarTeam/TeamCalendarContainer.tsx","App.tsx","reportWebVitals.ts","redux/reduxStore.ts","index.tsx"],"names":["Navbar","Box","sx","flexGrow","AppBar","position","color","Toolbar","Stack","spacing","direction","Button","variant","component","Link","to","config","require","instance","axios","create","headers","API_KEY","baseURL","footballAPI","get","then","r","data","competitions","teams","teamID","matches","initialState","leagues","actions","type","leaguesReducer","state","action","LeagueCard","emblemUrl","leagueName","leagueLogo","Card","width","height","CardMedia","image","alt","padding","maxWidth","CardContent","Typography","gutterBottom","Preloader","Backdrop","zIndex","theme","drawer","open","CircularProgress","Leagues","useState","league","setLeague","history","createBrowserHistory","useEffect","filterParams","location","search","substr","filtersFromParams","qs","parse","String","push","length","leaguesData","filter","l","name","toLowerCase","includes","map","Grid","item","id","className","TextField","label","value","marginBottom","onChange","e","target","container","LeaguesContainer","this","props","getLeagues","React","Component","mapDispatchToProps","dispatch","a","compose","connect","leaguesPage","teamsReducer","TeamCard","areaName","founded","crestUrl","teamName","maxHeight","Teams","team","setTeam","teamsData","t","area","TeamsContainer","getTeams","teamsPage","leagueCalendarReducer","LeaguePaper","homeTeamName","awayTeamName","stage","utcDate","awayScore","homeScore","isFinished","status","Paper","elevation","display","justifyContent","style","fontWeight","getUrlParams","urlParams","dateFrom","preparedDateFrom","Date","dateTo","preparedDateTo","dateLeagueFrom","setDateLeagueFrom","dateLeagueTo","setDateLeagueTo","preparedPush","competitionName","pageData","filteredMatches","m","matchDate","getTime","competition","score","fullTime","homeTeam","extraTime","penalties","halfTime","awayTeam","alignSelf","date","onDateFromChange","onDateToChange","LeagueCalendarContainer","getLeagueMatches","LeagueCalendar","leagueCalendar","teamMatches","teamCalendarReducer","TeamPaper","competitionEnsignUrl","src","TeamsCalendar","dateTeamFrom","setDateTeamFrom","dateTeamTo","setDateTeamTo","teamMatchesData","tm","ensignUrl","TeamCalendarContainer","getTeamMatches","TeamCalendar","teamCalendar","App","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleWare","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.d1d4b4f7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {AppBar, Box, Button, Stack, Toolbar} from \"@material-ui/core\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Navbar: React.FC = () => {\r\n  return <Box sx={{flexGrow: 1}}>\r\n    <AppBar position=\"fixed\" color={\"default\"}>\r\n      <Toolbar>\r\n        <Stack spacing={2} direction={\"row\"}>\r\n          <Button variant=\"outlined\" color={\"warning\"} component={Link} to=\"/leagues\">Лиги/Соревнования</Button>\r\n          <Button variant=\"outlined\" color={\"warning\"} component={Link} to=\"/teams\">Команды</Button>\r\n          <Button variant=\"outlined\" color={\"warning\"} component={Link} to=\"/league_calendar\">Календарь лиги</Button>\r\n          <Button variant=\"outlined\" color={\"warning\"} component={Link} to=\"/team_calendar\">Календарь команды</Button>\r\n        </Stack>\r\n      </Toolbar>\r\n    </AppBar>\r\n  </Box>\r\n}\r\n\r\nexport default Navbar","import axios from \"axios\";\r\n\r\nlet config = require('../env.json')\r\n\r\nexport const instance = axios.create({\r\n  headers: {\r\n    'X-Auth-Token': config.API_KEY\r\n  },\r\n  baseURL: 'http://api.football-data.org/v2/'\r\n});\r\n\r\nexport const footballAPI = {\r\n  getLeagues() {\r\n    return instance.get(`competitions`).then(r => r.data.competitions)\r\n  },\r\n  getTeams() {\r\n    const areas = [2032, 2072, 2077, 2081, 2088, 2144, 2163, 2187, 2220, 2224, 2267] //По бесплатной подписке\r\n    // доступны только текущие регионы/страны, а простой запрос `teams` выдаёт только 52 команды UK...\r\n    return instance.get(`teams/?areas=${areas}`).then(r => r.data.teams)\r\n  },\r\n  getLeagueMatches() {\r\n    return instance.get(`competitions/CL/matches`).then(r => r.data)\r\n  },\r\n  getTeamMatches(teamID: number) {\r\n    return instance.get(`teams/${teamID}/matches`).then(r => r.data.matches)\r\n  },\r\n}","import {baseThunkType, inferActionsTypes } from \"./reduxStore\";\r\nimport {footballAPI} from \"../api/api\";\r\nimport {leagueType} from \"../types/types\";\r\n\r\ntype actionsType = inferActionsTypes<typeof actions>\r\ntype thunkType = baseThunkType<actionsType>\r\n\r\nlet initialState = {\r\n  leagues: [] as Array<leagueType> | null\r\n};\r\n\r\nconst leaguesReducer = (state = initialState, action: actionsType) => {\r\n  switch (action.type) {\r\n    case \"LEAGUES/SET_LEAGUES_DATA\": {\r\n      return {\r\n        ...state,\r\n        leagues: action.data\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const actions = {\r\n  setLeaguesData: (data: any) => ({type: 'LEAGUES/SET_LEAGUES_DATA', data: data} as const)\r\n}\r\n\r\nexport const getLeagues = (): thunkType => async (dispatch) => {\r\n  let data = await footballAPI.getLeagues();\r\n\r\n  dispatch(actions.setLeaguesData(data));\r\n}\r\n\r\nexport default leaguesReducer","export default __webpack_public_path__ + \"static/media/leagueLogo.8a899f20.png\";","import {Card, CardContent, CardMedia, Typography} from \"@material-ui/core\";\r\nimport leagueLogo from '../../../assets/leagueLogo.png'\r\nimport React from \"react\";\r\n\r\ntype propsType = {\r\n  emblemUrl: string\r\n  leagueName: string\r\n}\r\n\r\nconst LeagueCard: React.FC<propsType> = ({emblemUrl, leagueName, ...props}) => {\r\n  if (!emblemUrl) emblemUrl = leagueLogo\r\n  return <div>\r\n    <Card sx={{width: 280, height: 370}}>\r\n      <CardMedia\r\n        component=\"img\"\r\n        width=\"200\"\r\n        image={emblemUrl}\r\n        alt=\"someLeague\"\r\n        sx={{padding: \"10px\", maxWidth: 260}}\r\n      />\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n          {leagueName}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  </div>\r\n}\r\n\r\nexport default LeagueCard","import {Backdrop, CircularProgress} from \"@material-ui/core\";\r\n\r\nconst Preloader = () => {\r\n  return (\r\n    <div>\r\n      <Backdrop\r\n        sx={{color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1}}\r\n        open={true}>\r\n        <CircularProgress color=\"inherit\"/>\r\n      </Backdrop>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Preloader","import React, {useEffect, useState} from \"react\";\r\nimport {leagueType} from \"../../types/types\";\r\nimport LeagueCard from \"./LeagueCard/LeagueCard\";\r\nimport {Box, Grid, TextField} from '@material-ui/core';\r\nimport '../../App.css';\r\nimport {createBrowserHistory} from \"history\";\r\nimport qs from \"qs\";\r\nimport Preloader from \"../../common/Preloader\";\r\n\r\ntype propsType = {\r\n  leagues: Array<leagueType>\r\n}\r\n\r\nconst Leagues: React.FC<propsType> = ({leagues}) => {\r\n  const [league, setLeague] = useState('');\r\n  const history = createBrowserHistory()\r\n\r\n  useEffect(() => {\r\n    const filterParams = history.location.search.substr(1);\r\n    const filtersFromParams = qs.parse(filterParams);\r\n    if (filtersFromParams.league) {\r\n      setLeague(String(filtersFromParams.league));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    history.push(`?league=${league}`);\r\n  }, [league]);\r\n\r\n  if (leagues.length === 0) {\r\n    return <Preloader/>\r\n  }\r\n\r\n  const filterLeagues = leagues.filter(l => {\r\n    return l.name.toLowerCase().includes(league.toLowerCase())\r\n  })\r\n\r\n  const leaguesData = filterLeagues.map(l => <Grid item key={l.id}>\r\n    <LeagueCard emblemUrl={l.emblemUrl} leagueName={l.name}/>\r\n  </Grid>)\r\n\r\n  return <Box sx={{padding: \"50px\"}}>\r\n    <div className={\"h1withSearch\"}>\r\n      <h1>LEAGUES</h1>\r\n      <TextField id=\"outlined-basic\" label=\"Search League...\" variant=\"outlined\" color={\"warning\"} value={league}\r\n                 sx={{marginBottom: \"40px\", width: \"50%\", maxWidth: \"250px\"}}\r\n                 onChange={(e) => {\r\n                   setLeague(e.target.value)\r\n                 }}/>\r\n    </div>\r\n    <Grid container spacing={3}>\r\n      {leaguesData}\r\n    </Grid>\r\n  </Box>\r\n};\r\n\r\nexport default Leagues","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {getLeagues} from \"../../redux/leaguesReducer\";\r\nimport {appStateType} from \"../../redux/reduxStore\";\r\nimport Leagues from \"./Leagues\";\r\n\r\ntype mapPropsType = ReturnType<typeof mapStateToProps>\r\ntype dispatchPropsType = {\r\n  getLeagues: () => void\r\n}\r\n\r\nclass LeaguesContainer extends React.Component<mapPropsType & dispatchPropsType> {\r\n  componentDidMount() {\r\n    this.props.getLeagues();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Leagues leagues={this.props.leagues}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: appStateType) => {\r\n  return {\r\n    leagues: state.leaguesPage.leagues\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getLeagues\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(LeaguesContainer);","import {baseThunkType, inferActionsTypes} from \"./reduxStore\";\r\nimport {footballAPI} from \"../api/api\";\r\nimport {teamType} from \"../types/types\";\r\n\r\ntype actionsType = inferActionsTypes<typeof actions>\r\ntype thunkType = baseThunkType<actionsType>\r\n\r\nlet initialState = {\r\n  teams: [] as Array<teamType> | null\r\n};\r\n\r\nconst teamsReducer = (state = initialState, action: actionsType) => {\r\n  switch (action.type) {\r\n    case \"TEAMS/SET_TEAMS_DATA\": {\r\n      return {\r\n        ...state,\r\n        teams: action.data\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const actions = {\r\n  setTeamsData: (data: any) => ({type: 'TEAMS/SET_TEAMS_DATA', data: data} as const)\r\n}\r\n\r\nexport const getTeams = (): thunkType => async (dispatch) => {\r\n  let data = await footballAPI.getTeams()\r\n\r\n  dispatch(actions.setTeamsData(data));\r\n}\r\n\r\nexport default teamsReducer","import {Card, CardContent, CardMedia, Typography} from \"@material-ui/core\";\r\nimport leagueLogo from '../../../assets/leagueLogo.png'\r\nimport React from \"react\";\r\n\r\ntype propsType = {\r\n  areaName: string\r\n  founded: number\r\n  crestUrl: string\r\n  teamName: string\r\n}\r\n\r\nconst TeamCard: React.FC<propsType> = ({areaName, founded, crestUrl, teamName}) => {\r\n  if (!crestUrl) crestUrl = leagueLogo\r\n  return <div>\r\n    <Card sx={{width: 210, maxHeight: 450}}>\r\n      <CardMedia\r\n        component=\"img\"\r\n        height=\"200\"\r\n        image={crestUrl}\r\n        alt=\"someTeam\"\r\n        sx={{padding: \"10px\", width: \"90%\", maxWidth: \"190\"}}\r\n      />\r\n      <CardContent sx={{height: 120}}>\r\n        <Typography gutterBottom variant=\"h6\" component=\"div\">\r\n          {areaName} <br/> {founded} <br/> {teamName}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  </div>\r\n}\r\n\r\nexport default TeamCard","import React, {useEffect, useState} from \"react\";\r\nimport {teamType} from \"../../types/types\";\r\nimport {Box, Grid, TextField} from \"@material-ui/core\";\r\nimport TeamCard from \"./TeamCard/TeamCard\";\r\nimport {createBrowserHistory} from \"history\";\r\nimport qs from \"qs\";\r\nimport Preloader from \"../../common/Preloader\";\r\n\r\ntype propsType = {\r\n  teams: Array<teamType>\r\n}\r\n\r\nconst Teams: React.FC<propsType> = ({teams}) => {\r\n  const [team, setTeam] = useState<string>('')\r\n  const history = createBrowserHistory()\r\n\r\n  useEffect(() => {\r\n    const filterParams = history.location.search.substr(1);\r\n    const filtersFromParams = qs.parse(filterParams);\r\n    if (filtersFromParams.team) {\r\n      setTeam(String(filtersFromParams.team));\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    history.push(`?team=${team}`);\r\n  }, [team]);\r\n\r\n  if (teams.length === 0) {\r\n    return <Preloader/>\r\n  }\r\n\r\n  const filteredTeams = teams.filter(t => {\r\n    return t.name.toLowerCase().includes(team.toLowerCase())\r\n  })\r\n\r\n  const teamsData = filteredTeams.map(t => <Grid item key={t.id}>\r\n    <TeamCard areaName={t.area.name} founded={t.founded} crestUrl={t.crestUrl} teamName={t.name}/>\r\n  </Grid>)\r\n\r\n  return <Box sx={{padding: \"50px\"}}>\r\n    <div className={\"h1withSearch\"}>\r\n      <h1>TEAMS</h1>\r\n      <TextField id=\"outlined-basic\" label=\"Search Team...\" variant=\"outlined\" color={\"warning\"} value={team}\r\n                 sx={{marginBottom: \"40px\"}}\r\n                 onChange={(e) => {\r\n                   setTeam(e.target.value)\r\n                 }}/>\r\n    </div>\r\n    <Grid container spacing={2}>\r\n      {teamsData}\r\n    </Grid>\r\n  </Box>\r\n}\r\n\r\nexport default Teams","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {appStateType} from \"../../redux/reduxStore\";\r\nimport {getTeams} from \"../../redux/teamsReducer\";\r\nimport Teams from \"./Teams\";\r\n\r\ntype mapPropsType = ReturnType<typeof mapStateToProps>\r\ntype dispatchPropsType = {\r\n  getTeams: () => void\r\n}\r\n\r\nclass TeamsContainer extends React.Component<mapPropsType & dispatchPropsType> {\r\n  componentDidMount() {\r\n    this.props.getTeams();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Teams teams={this.props.teams}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: appStateType) => {\r\n  return {\r\n    teams: state.teamsPage.teams\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getTeams\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(TeamsContainer);","import {baseThunkType, inferActionsTypes } from \"./reduxStore\";\r\nimport {footballAPI} from \"../api/api\";\r\nimport {leagueMatchesType} from \"../types/types\";\r\n\r\ntype actionsType = inferActionsTypes<typeof actions>\r\ntype thunkType = baseThunkType<actionsType>\r\n\r\nlet initialState = {\r\n  matches: null as leagueMatchesType | null\r\n};\r\n\r\nconst leagueCalendarReducer = (state = initialState, action: actionsType) => {\r\n  switch (action.type) {\r\n    case \"LEAGUE_CALENDAR/SET_LEAGUE_MATCH_DATA\": {\r\n      return {\r\n        ...state,\r\n        matches: action.data\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const actions = {\r\n  setLeaguesMatchData: (data: any) => ({type: 'LEAGUE_CALENDAR/SET_LEAGUE_MATCH_DATA', data: data} as const)\r\n}\r\n\r\nexport const getLeagueMatches = (): thunkType => async (dispatch) => {\r\n  let data = await footballAPI.getLeagueMatches();\r\n\r\n  dispatch(actions.setLeaguesMatchData(data));\r\n}\r\n\r\nexport default leagueCalendarReducer","import {Box, Paper} from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\ntype propsType = {\r\n  homeTeamName: string\r\n  awayTeamName: string\r\n  stage: string\r\n  utcDate: string\r\n  homeScore: number | null\r\n  awayScore: number | null\r\n  status: string\r\n}\r\n\r\nconst LeaguePaper: React.FC<propsType> =\r\n  ({homeTeamName, awayTeamName, stage, utcDate, awayScore, homeScore, status}) => {\r\n    let isFinished = status === \"FINISHED\"\r\n    return <Paper elevation={3} sx={{padding: 3, width: 850}}>\r\n      <Box sx={{display: \"flex\", justifyContent: \"center\"}}>\r\n        {homeTeamName}\r\n        <div style={{color: \"#ed730f\", fontWeight: \"bold\", display: \"flex\"}}>\r\n          &#8195;\r\n          {isFinished ? <div>{homeScore}&#8195;</div> : null}\r\n          &#10006;\r\n          {isFinished ? <div>&#8195;{awayScore}</div> : null}\r\n          &#8195;\r\n        </div>\r\n        {awayTeamName}\r\n      </Box>\r\n      <Box sx={{display: \"flex\", justifyContent: \"center\"}}>\r\n        {stage}\r\n      </Box>\r\n      <Box sx={{display: \"flex\", justifyContent: \"center\"}}>\r\n        {isFinished ? null : utcDate}\r\n      </Box>\r\n    </Paper>\r\n  }\r\n\r\nexport default LeaguePaper","import qs from \"qs\";\r\nimport {createBrowserHistory} from \"history\";\r\n\r\nconst history = createBrowserHistory()\r\n\r\nexport const getUrlParams = () => {\r\n  let urlParams = []\r\n  const filterParams = history.location.search.substr(1);\r\n  const filtersFromParams = qs.parse(filterParams);\r\n  if (filtersFromParams.dateFrom) {\r\n    const preparedDateFrom = new Date(String(filtersFromParams.dateFrom))\r\n    urlParams.push(preparedDateFrom)\r\n  } else urlParams.push(null)\r\n  if (filtersFromParams.dateTo) {\r\n    const preparedDateTo = new Date(String(filtersFromParams.dateTo))\r\n    urlParams.push(preparedDateTo)\r\n  } else urlParams.push(null)\r\n  return urlParams\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {leagueMatchesType} from \"../../types/types\";\r\nimport {Box, Grid} from \"@material-ui/core\";\r\nimport LeaguePaper from \"./LeaguePaper/LeaguePaper\";\r\nimport DatePicker from 'react-date-picker';\r\nimport {createBrowserHistory} from \"history\";\r\nimport {getUrlParams} from \"../../common/common\";\r\nimport Preloader from \"../../common/Preloader\";\r\n\r\ntype propsType = {\r\n  matches: leagueMatchesType\r\n}\r\n\r\nconst Leagues: React.FC<propsType> = ({matches}) => {\r\n  const [dateLeagueFrom, setDateLeagueFrom] = useState<Date | null>(new Date(\"2011-01-01T12:00:00\"));\r\n  const [dateLeagueTo, setDateLeagueTo] = useState<Date | null>(new Date(\"2024-01-01T12:00:00\"));\r\n  const history = createBrowserHistory()\r\n\r\n  useEffect(() => {\r\n    const urlParams = getUrlParams()\r\n    setDateLeagueFrom(urlParams[0])\r\n    setDateLeagueTo(urlParams[1])\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    let preparedPush = `?dateFrom=${String(dateLeagueFrom).substr(4, 21)}&dateTo=${String(dateLeagueTo).substr(4, 21)}`\r\n    history.push(preparedPush);\r\n  }, [dateLeagueFrom, dateLeagueTo]);\r\n\r\n  if (!matches) {\r\n    return <Preloader/>\r\n  }\r\n\r\n  const onDateFromChange = (date: Date) => {\r\n    setDateLeagueFrom(date)\r\n  }\r\n  const onDateToChange = (date: Date) => {\r\n    setDateLeagueTo(date)\r\n  }\r\n\r\n  let competitionName = null\r\n  let pageData = null\r\n  if (matches) {\r\n    const filteredMatches = matches.matches.filter(m => {\r\n      let matchDate = new Date(m.utcDate).getTime()\r\n      if (dateLeagueFrom && dateLeagueTo) {\r\n        return dateLeagueFrom.getTime() <= matchDate && matchDate <= dateLeagueTo.getTime()\r\n      }\r\n      return true\r\n    })\r\n\r\n    competitionName = matches.competition.name\r\n    pageData = filteredMatches.map(m => {\r\n      let homeScore = m.score.fullTime.homeTeam! + m.score.extraTime.homeTeam! + m.score.penalties.homeTeam! + m.score.halfTime.homeTeam!\r\n      let awayScore = m.score.fullTime.awayTeam! + m.score.extraTime.awayTeam! + m.score.penalties.awayTeam! + m.score.halfTime.awayTeam!\r\n\r\n      return <Grid item key={m.id} alignSelf={\"center\"}>\r\n        <LeaguePaper stage={m.stage} utcDate={m.utcDate} homeTeamName={m.homeTeam.name}\r\n                     awayTeamName={m.awayTeam.name} awayScore={awayScore} homeScore={homeScore} status={m.status}/>\r\n      </Grid>\r\n    })\r\n  }\r\n\r\n  return <Box sx={{padding: \"50px\"}}>\r\n    <div className={\"h1withLeagueDate\"}>\r\n      <h1>{competitionName} Calendar</h1>\r\n      <DatePicker onChange={(date: Date) => {\r\n        onDateFromChange(date)\r\n      }} value={dateLeagueFrom}/>\r\n      <DatePicker onChange={(date: Date) => {\r\n        onDateToChange(date)\r\n      }} value={dateLeagueTo}/>\r\n    </div>\r\n    <Grid container spacing={2} direction=\"column\">\r\n      {pageData}\r\n    </Grid>\r\n  </Box>\r\n}\r\n\r\nexport default Leagues","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport { getLeagueMatches } from \"../../redux/leagueCalendarReducer\";\r\nimport {appStateType} from \"../../redux/reduxStore\";\r\nimport LeagueCalendar from \"./LeagueCalendar\";\r\n\r\ntype mapPropsType = ReturnType<typeof mapStateToProps>\r\ntype dispatchPropsType = {\r\n  getLeagueMatches: () => void\r\n}\r\n\r\nclass LeagueCalendarContainer extends React.Component<mapPropsType & dispatchPropsType> {\r\n  componentDidMount() {\r\n    this.props.getLeagueMatches();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <LeagueCalendar matches={this.props.matches}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: appStateType) => {\r\n  return {\r\n    matches: state.leagueCalendar.matches\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getLeagueMatches\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(LeagueCalendarContainer);","import {baseThunkType, inferActionsTypes } from \"./reduxStore\";\r\nimport {footballAPI} from \"../api/api\";\r\nimport { teamMatchesType } from \"../types/types\";\r\n\r\ntype actionsType = inferActionsTypes<typeof actions>\r\ntype thunkType = baseThunkType<actionsType>\r\n\r\nlet initialState = {\r\n  teamMatches: null as Array<teamMatchesType> | null,\r\n  teamID: 86\r\n};\r\n\r\nconst teamCalendarReducer = (state = initialState, action: actionsType) => {\r\n  switch (action.type) {\r\n    case \"TEAMS_CALENDAR/SET_TEAMS_MATCH_DATA\": {\r\n      return {\r\n        ...state,\r\n        teamMatches: action.data\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const actions = {\r\n  setTeamsMatchData: (data: any) => ({type: 'TEAMS_CALENDAR/SET_TEAMS_MATCH_DATA', data: data} as const)\r\n}\r\n\r\nexport const getTeamMatches = (teamID: number = initialState.teamID): thunkType => async (dispatch) => {\r\n  let data = await footballAPI.getTeamMatches(teamID);\r\n\r\n  dispatch(actions.setTeamsMatchData(data));\r\n}\r\n\r\nexport default teamCalendarReducer","import {Box, Paper} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport '../../../App.css'\r\n\r\ntype propsType = {\r\n  competitionEnsignUrl: string\r\n  competitionName: string\r\n  awayTeamName: string\r\n  homeTeamName: string\r\n  utcDate: string\r\n  status: string\r\n  homeScore: number\r\n  awayScore: number\r\n}\r\n\r\nconst TeamPaper: React.FC<propsType> =\r\n  ({competitionEnsignUrl, competitionName, awayTeamName, homeTeamName,\r\n     utcDate, status, homeScore, awayScore,}) => {\r\n  const isFinished = status === \"FINISHED\"\r\n    return <Paper elevation={3} sx={{padding: 3, width: 850}}>\r\n      <Box sx={{display: \"flex\", justifyContent: \"center\"}}>\r\n        {homeTeamName}\r\n        <div style={{color: \"#ed730f\", fontWeight: \"bold\", display: \"flex\"}}>\r\n          &#8195;\r\n          {isFinished ? <div>{homeScore}&#8195;</div> : null}\r\n          &#10006;\r\n          {isFinished ? <div>&#8195;{awayScore}</div> : null}\r\n          &#8195;\r\n        </div>\r\n        {awayTeamName}\r\n      </Box>\r\n      <Box sx={{display: \"flex\", justifyContent: \"center\"}}>\r\n        <img src={competitionEnsignUrl} alt=\"someMatch\" className={\"imgTeamMatchLogo\"}/>\r\n        <div>&#8195;{competitionName}</div>\r\n      </Box>\r\n      <Box sx={{display: \"flex\", justifyContent: \"center\"}}>\r\n        {isFinished ? null : utcDate}\r\n      </Box>\r\n    </Paper>\r\n  }\r\n\r\nexport default TeamPaper","import React, {useEffect, useState} from \"react\";\r\nimport {teamMatchesType} from \"../../types/types\";\r\nimport {Box, Grid} from \"@material-ui/core\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport TeamPaper from \"./TeamPaper/teamPaper\";\r\nimport {createBrowserHistory} from \"history\";\r\nimport {getUrlParams} from \"../../common/common\";\r\nimport Preloader from \"../../common/Preloader\";\r\n\r\ntype propsType = {\r\n  teamMatches: Array<teamMatchesType>\r\n  teamID: number\r\n}\r\n\r\nconst TeamsCalendar: React.FC<propsType> = ({teamMatches, teamID}) => {\r\n  const [dateTeamFrom, setDateTeamFrom] = useState<Date | null>(new Date(\"2011-01-01T12:00:00\"));\r\n  const [dateTeamTo, setDateTeamTo] = useState<Date | null>(new Date(\"2024-01-01T12:00:00\"));\r\n  const history = createBrowserHistory()\r\n\r\n  useEffect(() => {\r\n    const urlParams = getUrlParams()\r\n    setDateTeamFrom(urlParams[0])\r\n    setDateTeamTo(urlParams[1])\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    let preparedPush = `?dateFrom=${String(dateTeamFrom).substr(4, 21)}&dateTo=${String(dateTeamTo).substr(4, 21)}`\r\n    history.push(preparedPush);\r\n  }, [dateTeamFrom, dateTeamTo]);\r\n\r\n  if (!teamMatches) {\r\n    return <Preloader/>\r\n  }\r\n\r\n  const onDateFromChange = (date: Date) => {\r\n    setDateTeamFrom(date)\r\n  }\r\n  const onDateToChange = (date: Date) => {\r\n    setDateTeamTo(date)\r\n  }\r\n\r\n  let teamName = null\r\n  let teamMatchesData = null\r\n\r\n  if (teamMatches) {\r\n    teamName = teamMatches[0].awayTeam.id === teamID ? teamMatches[0].awayTeam.name : teamMatches[0].homeTeam.name\r\n\r\n    const filteredTeamMatches = teamMatches.filter(tm => {\r\n      let matchDate = new Date(tm.utcDate).getTime()\r\n      if (dateTeamFrom && dateTeamTo) {\r\n        return dateTeamFrom.getTime() <= matchDate && matchDate <= dateTeamTo.getTime()\r\n      }\r\n      return true\r\n    })\r\n\r\n    teamMatchesData = filteredTeamMatches.map(tm => {\r\n      let homeScore = tm.score.halfTime.homeTeam! + tm.score.fullTime.homeTeam! + tm.score.extraTime.homeTeam! + tm.score.penalties.homeTeam!\r\n      let awayScore = tm.score.halfTime.awayTeam! + tm.score.fullTime.awayTeam! + tm.score.extraTime.awayTeam! + tm.score.penalties.awayTeam!\r\n\r\n      return <Grid item key={tm.id} alignSelf={\"center\"}>\r\n        <TeamPaper homeTeamName={tm.homeTeam.name} awayTeamName={tm.awayTeam.name} utcDate={tm.utcDate}\r\n                   status={tm.status} competitionEnsignUrl={tm.competition.area.ensignUrl}\r\n                   competitionName={tm.competition.name} homeScore={homeScore} awayScore={awayScore}/>\r\n      </Grid>\r\n    })\r\n  }\r\n\r\n  return <Box>\r\n    <div className={\"h1withTeamDate\"}>\r\n      <h1>{teamName} Calendar</h1>\r\n      <DatePicker onChange={(date: Date) => {\r\n        onDateFromChange(date)\r\n      }} value={dateTeamFrom}/>\r\n      <DatePicker onChange={(date: Date) => {\r\n        onDateToChange(date)\r\n      }} value={dateTeamTo}/>\r\n    </div>\r\n    <Grid container spacing={2} direction=\"column\">\r\n      {teamMatchesData}\r\n    </Grid>\r\n  </Box>\r\n}\r\n\r\nexport default TeamsCalendar","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {appStateType} from \"../../redux/reduxStore\";\r\nimport {getTeamMatches} from \"../../redux/teamCalendarReducer\";\r\nimport TeamCalendar from \"./TeamCalendar\";\r\n\r\ntype mapPropsType = ReturnType<typeof mapStateToProps>\r\ntype dispatchPropsType = {\r\n  getTeamMatches: () => void\r\n}\r\n\r\nclass TeamCalendarContainer extends React.Component<mapPropsType & dispatchPropsType> {\r\n  componentDidMount() {\r\n    this.props.getTeamMatches();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TeamCalendar teamMatches={this.props.teamMatches} teamID={this.props.teamID}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: appStateType) => {\r\n  return {\r\n    teamMatches: state.teamCalendar.teamMatches,\r\n    teamID: state.teamCalendar.teamID\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  getTeamMatches\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(TeamCalendarContainer);","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {Route} from \"react-router-dom\";\nimport LeaguesContainer from \"./components/Leagues/LeaguesContainer\";\nimport TeamsContainer from \"./components/Teams/TeamsContainer\";\nimport LeagueCalendarContainer from \"./components/CalendarLeague/LeagueCalendarContainer\";\nimport TeamCalendarContainer from \"./components/CalendarTeam/TeamCalendarContainer\";\n\nclass App extends React.Component {\n  render() {\n    return <div>\n      <Navbar/>\n      <div className=\"App-header\">\n        <Route exact path=\"/leagues\" render={() =>\n          <LeaguesContainer/>\n        }/>\n        <Route exact path=\"/teams\" render={() =>\n          <TeamsContainer/>\n        }/>\n        <Route exact path=\"/league_calendar\" render={() =>\n          <LeagueCalendarContainer/>\n        }/>\n        <Route exact path=\"/team_calendar\" render={() =>\n          <TeamCalendarContainer/>\n        }/>\n      </div>\n    </div>\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {Action, applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport leaguesReducer from \"./leaguesReducer\";\r\nimport thunkMiddleWare, { ThunkAction } from 'redux-thunk';\r\nimport teamsReducer from \"./teamsReducer\";\r\nimport leagueCalendarReducer from \"./leagueCalendarReducer\";\r\nimport teamCalendarReducer from \"./teamCalendarReducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n  leaguesPage: leaguesReducer,\r\n  teamsPage: teamsReducer,\r\n  leagueCalendar: leagueCalendarReducer,\r\n  teamCalendar: teamCalendarReducer\r\n});\r\n\r\ntype rootReducerType = typeof rootReducer //global state\r\nexport type appStateType = ReturnType<rootReducerType>\r\n\r\nexport type inferActionsTypes<T> = T extends {[keys: string]: (...args: any[]) => infer U} ? U : never\r\nexport type baseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, appStateType, unknown, A>\r\n\r\nlet store = createStore(rootReducer, applyMiddleware(thunkMiddleWare));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from './redux/reduxStore';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App/>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}